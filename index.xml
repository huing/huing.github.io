<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>huing的博客</title>
    <link>https://huing.github.io/</link>
    <description>Recent content on huing的博客</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 06 Feb 2025 15:38:52 +0800</lastBuildDate>
    <atom:link href="https://huing.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>关于</title>
      <link>https://huing.github.io/about/</link>
      <pubDate>Sun, 20 Aug 2017 21:38:52 +0800</pubDate>
      <guid>https://huing.github.io/about/</guid>
      <description>我的博客 Github 地址 github 邮箱地址</description>
    </item>
    <item>
      <title>AI</title>
      <link>https://huing.github.io/ai/</link>
      <pubDate>Thu, 06 Feb 2025 15:38:52 +0800</pubDate>
      <guid>https://huing.github.io/ai/</guid>
      <description>异常值（Outliers） 噪声（Noise）</description>
    </item>
    <item>
      <title>Tailwindcss自定义配置教程</title>
      <link>https://huing.github.io/post/tailwindcss%E8%87%AA%E5%AE%9A%E4%B9%89%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/</link>
      <pubDate>Thu, 05 Dec 2024 10:59:00 +0800</pubDate>
      <guid>https://huing.github.io/post/tailwindcss%E8%87%AA%E5%AE%9A%E4%B9%89%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/</guid>
      <description>1 2 3 @tailwind base; /* 注入 Tailwind 的基础样式，如默认字体、边距等重置样式 */ @tailwind components; /* 注入 Tailwind 的组件类，包括预定义的组件样式 */ @tailwind utilities; /* 注入 Tailwind 的功能类，如 flex、p-</description>
    </item>
    <item>
      <title>如何把xmind转成md</title>
      <link>https://huing.github.io/post/%E5%A6%82%E4%BD%95%E6%8A%8Axmind%E8%BD%AC%E6%88%90md/</link>
      <pubDate>Wed, 04 Dec 2024 16:14:19 +0800</pubDate>
      <guid>https://huing.github.io/post/%E5%A6%82%E4%BD%95%E6%8A%8Axmind%E8%BD%AC%E6%88%90md/</guid>
      <description></description>
    </item>
    <item>
      <title>跨端解决方案</title>
      <link>https://huing.github.io/%E5%B0%8F%E7%A8%8B%E5%BA%8F/%E8%B7%A8%E7%AB%AF%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</link>
      <pubDate>Tue, 03 Sep 2024 07:34:42 +0800</pubDate>
      <guid>https://huing.github.io/%E5%B0%8F%E7%A8%8B%E5%BA%8F/%E8%B7%A8%E7%AB%AF%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</guid>
      <description></description>
    </item>
    <item>
      <title>原生</title>
      <link>https://huing.github.io/%E5%B0%8F%E7%A8%8B%E5%BA%8F/%E5%8E%9F%E7%94%9F/</link>
      <pubDate>Tue, 03 Sep 2024 07:33:27 +0800</pubDate>
      <guid>https://huing.github.io/%E5%B0%8F%E7%A8%8B%E5%BA%8F/%E5%8E%9F%E7%94%9F/</guid>
      <description></description>
    </item>
    <item>
      <title>调试</title>
      <link>https://huing.github.io/react-native/%E8%B0%83%E8%AF%95/</link>
      <pubDate>Tue, 03 Sep 2024 07:31:27 +0800</pubDate>
      <guid>https://huing.github.io/react-native/%E8%B0%83%E8%AF%95/</guid>
      <description>chrome devtools android simulator ios simulator</description>
    </item>
    <item>
      <title>最佳实践</title>
      <link>https://huing.github.io/react-native/%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</link>
      <pubDate>Tue, 03 Sep 2024 07:31:22 +0800</pubDate>
      <guid>https://huing.github.io/react-native/%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</guid>
      <description>nativewind[https://www.nativewind.dev/] transform 设置中心点坐标 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61</description>
    </item>
    <item>
      <title>语法</title>
      <link>https://huing.github.io/react-native/%E8%AF%AD%E6%B3%95/</link>
      <pubDate>Tue, 03 Sep 2024 07:31:12 +0800</pubDate>
      <guid>https://huing.github.io/react-native/%E8%AF%AD%E6%B3%95/</guid>
      <description>hybrid 是啥 weex</description>
    </item>
    <item>
      <title>渲染</title>
      <link>https://huing.github.io/%E6%B5%8F%E8%A7%88%E5%99%A8/%E6%B8%B2%E6%9F%93/</link>
      <pubDate>Tue, 03 Sep 2024 07:27:41 +0800</pubDate>
      <guid>https://huing.github.io/%E6%B5%8F%E8%A7%88%E5%99%A8/%E6%B8%B2%E6%9F%93/</guid>
      <description>side rendering ssr ssr 是什么 ssg esr rsr nextjs(react) nuxtjs(vue) bff 网关 k8s v8s 服务器，镜像，容器 无服务器（Serverless） RPC 远程过程调用（英语：Remote Procedure Call，RPC）是</description>
    </item>
    <item>
      <title>其他</title>
      <link>https://huing.github.io/%E6%80%A7%E8%83%BD/%E5%85%B6%E4%BB%96/</link>
      <pubDate>Tue, 03 Sep 2024 07:24:57 +0800</pubDate>
      <guid>https://huing.github.io/%E6%80%A7%E8%83%BD/%E5%85%B6%E4%BB%96/</guid>
      <description>RAIL 模型 Lighthouse 指标 DevTools PWA Service Worker</description>
    </item>
    <item>
      <title>骨架屏</title>
      <link>https://huing.github.io/%E6%80%A7%E8%83%BD/%E9%AA%A8%E6%9E%B6%E5%B1%8F/</link>
      <pubDate>Tue, 03 Sep 2024 07:24:40 +0800</pubDate>
      <guid>https://huing.github.io/%E6%80%A7%E8%83%BD/%E9%AA%A8%E6%9E%B6%E5%B1%8F/</guid>
      <description></description>
    </item>
    <item>
      <title>性能指标</title>
      <link>https://huing.github.io/%E6%80%A7%E8%83%BD/%E6%80%A7%E8%83%BD%E6%8C%87%E6%A0%87/</link>
      <pubDate>Tue, 03 Sep 2024 07:24:29 +0800</pubDate>
      <guid>https://huing.github.io/%E6%80%A7%E8%83%BD/%E6%80%A7%E8%83%BD%E6%8C%87%E6%A0%87/</guid>
      <description>考察 白屏影响用户率 js 错误影响用户率 LCP Largest Contentful Paint 最大内容绘制 CLS Cumulative Layout Shift 累积布局偏移 TTI Time To Interactive 页面加载开始到页面处于完全可交互状态所花费的时间 FCP First Contentful Paint 首</description>
    </item>
    <item>
      <title>TypeScript</title>
      <link>https://huing.github.io/typescript/</link>
      <pubDate>Tue, 03 Sep 2024 07:23:39 +0800</pubDate>
      <guid>https://huing.github.io/typescript/</guid>
      <description></description>
    </item>
    <item>
      <title>测试</title>
      <link>https://huing.github.io/%E6%B5%8B%E8%AF%95/</link>
      <pubDate>Tue, 03 Sep 2024 07:18:00 +0800</pubDate>
      <guid>https://huing.github.io/%E6%B5%8B%E8%AF%95/</guid>
      <description>单元测试 集成测试 E2E 测试 jest enzyme puppeteer</description>
    </item>
    <item>
      <title>源码</title>
      <link>https://huing.github.io/vue/%E6%BA%90%E7%A0%81/</link>
      <pubDate>Tue, 03 Sep 2024 07:13:19 +0800</pubDate>
      <guid>https://huing.github.io/vue/%E6%BA%90%E7%A0%81/</guid>
      <description></description>
    </item>
    <item>
      <title>Router</title>
      <link>https://huing.github.io/vue/router/</link>
      <pubDate>Tue, 03 Sep 2024 07:13:07 +0800</pubDate>
      <guid>https://huing.github.io/vue/router/</guid>
      <description></description>
    </item>
    <item>
      <title>Router</title>
      <link>https://huing.github.io/react/router/</link>
      <pubDate>Tue, 03 Sep 2024 07:12:07 +0800</pubDate>
      <guid>https://huing.github.io/react/router/</guid>
      <description></description>
    </item>
    <item>
      <title>源码</title>
      <link>https://huing.github.io/react/%E6%BA%90%E7%A0%81/</link>
      <pubDate>Tue, 03 Sep 2024 07:11:40 +0800</pubDate>
      <guid>https://huing.github.io/react/%E6%BA%90%E7%A0%81/</guid>
      <description></description>
    </item>
    <item>
      <title>自动化构建</title>
      <link>https://huing.github.io/%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%9E%84%E5%BB%BA/</link>
      <pubDate>Tue, 03 Sep 2024 07:07:38 +0800</pubDate>
      <guid>https://huing.github.io/%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%9E%84%E5%BB%BA/</guid>
      <description>npm script</description>
    </item>
    <item>
      <title>模块化打包</title>
      <link>https://huing.github.io/%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/%E6%A8%A1%E5%9D%97%E5%8C%96%E6%89%93%E5%8C%85/</link>
      <pubDate>Tue, 03 Sep 2024 07:07:23 +0800</pubDate>
      <guid>https://huing.github.io/%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/%E6%A8%A1%E5%9D%97%E5%8C%96%E6%89%93%E5%8C%85/</guid>
      <description>webpack rollup parcel</description>
    </item>
    <item>
      <title>包管理</title>
      <link>https://huing.github.io/node/%E5%8C%85%E7%AE%A1%E7%90%86/</link>
      <pubDate>Tue, 03 Sep 2024 07:04:57 +0800</pubDate>
      <guid>https://huing.github.io/node/%E5%8C%85%E7%AE%A1%E7%90%86/</guid>
      <description>npm yarn npx pnpm package.json 配置 入口文件字段 main: CommonJS 规范的入口文件 Node.js 默认使用的入口点 通常指向 dist/index.js 或 lib/index.js 使用 require() 导入时使用此入口 module: ES Module 规范的入口文件 现代打包工具（webp</description>
    </item>
    <item>
      <title>基础入门</title>
      <link>https://huing.github.io/node/%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/</link>
      <pubDate>Tue, 03 Sep 2024 07:04:42 +0800</pubDate>
      <guid>https://huing.github.io/node/%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/</guid>
      <description>文件读写 fs 路径查找 path 网络 http</description>
    </item>
    <item>
      <title>基本命令</title>
      <link>https://huing.github.io/post/%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Tue, 03 Sep 2024 07:03:20 +0800</pubDate>
      <guid>https://huing.github.io/post/%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/</guid>
      <description>git log &amp;ndash;pretty=oneline &amp;ndash;graph git reflog 记录命令历史 查看项目邮箱，用户名 1 2 git config user.name git config user.email git checkout 1 2 3 git checkout --readme.text 丢弃工作区修改 git checkout -b dev 创建并切换到dev分支 git checkout -b dev origin/dev 创建远程o</description>
    </item>
    <item>
      <title>接口请求</title>
      <link>https://huing.github.io/javascript/%E6%8E%A5%E5%8F%A3%E8%AF%B7%E6%B1%82/</link>
      <pubDate>Tue, 03 Sep 2024 07:01:20 +0800</pubDate>
      <guid>https://huing.github.io/javascript/%E6%8E%A5%E5%8F%A3%E8%AF%B7%E6%B1%82/</guid>
      <description>ajax fetch keep-alive navigator.setbean</description>
    </item>
    <item>
      <title>DOM</title>
      <link>https://huing.github.io/javascript/dom/</link>
      <pubDate>Tue, 03 Sep 2024 07:00:28 +0800</pubDate>
      <guid>https://huing.github.io/javascript/dom/</guid>
      <description>DOM 是文档对象模型，是 HTML 和 XML 文档的编程接口。 DOM 将文档解析为一个由节点和对象（包含属性和方法的对象）组成的结构化树。 DOM 是 HTML 和 XML 文档的编程接口。</description>
    </item>
    <item>
      <title>表单</title>
      <link>https://huing.github.io/html/%E8%A1%A8%E5%8D%95/</link>
      <pubDate>Tue, 03 Sep 2024 06:59:34 +0800</pubDate>
      <guid>https://huing.github.io/html/%E8%A1%A8%E5%8D%95/</guid>
      <description></description>
    </item>
    <item>
      <title>基本语法</title>
      <link>https://huing.github.io/javascript/%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</link>
      <pubDate>Tue, 03 Sep 2024 06:59:04 +0800</pubDate>
      <guid>https://huing.github.io/javascript/%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</guid>
      <description>es6+ 变量提升 时间冒泡捕获 作用域 原型 闭包 闭包（Closure）是 JavaScript 中一个重要的概念，指的是一个函数可以访问其外部作用域中的变量，即使在该函数在其</description>
    </item>
    <item>
      <title>基本语法</title>
      <link>https://huing.github.io/css/</link>
      <pubDate>Tue, 03 Sep 2024 06:55:26 +0800</pubDate>
      <guid>https://huing.github.io/css/</guid>
      <description>line-height 如何继承 line-height 具体值 30px 子元素继承该值 line-height 比例 1.5 子元素继承该比例 line-height 百分比 200% 子元素继承 父元素 font-size * 200% 的值 css 值与单位 绝对长度单位 与任何东西都没有关系 cm mm</description>
    </item>
    <item>
      <title>常用标签</title>
      <link>https://huing.github.io/html/%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE/</link>
      <pubDate>Tue, 03 Sep 2024 06:54:08 +0800</pubDate>
      <guid>https://huing.github.io/html/%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE/</guid>
      <description></description>
    </item>
    <item>
      <title>WebView</title>
      <link>https://huing.github.io/%E6%B5%8F%E8%A7%88%E5%99%A8/webview/</link>
      <pubDate>Tue, 03 Sep 2024 06:53:19 +0800</pubDate>
      <guid>https://huing.github.io/%E6%B5%8F%E8%A7%88%E5%99%A8/webview/</guid>
      <description>WebView 是 Android 和 iOS 平台上的原生组件，用于显示网页内容。 WebView 是移动应用开发中的一个重要组件，它能够在原生应用中嵌入网页内容。简单来说，它就像是一个迷你的</description>
    </item>
    <item>
      <title>HeadlessBrowser</title>
      <link>https://huing.github.io/%E6%B5%8F%E8%A7%88%E5%99%A8/headlessbrowser/</link>
      <pubDate>Tue, 03 Sep 2024 06:50:51 +0800</pubDate>
      <guid>https://huing.github.io/%E6%B5%8F%E8%A7%88%E5%99%A8/headlessbrowser/</guid>
      <description></description>
    </item>
    <item>
      <title>浏览器工作原理</title>
      <link>https://huing.github.io/%E6%B5%8F%E8%A7%88%E5%99%A8/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/</link>
      <pubDate>Tue, 03 Sep 2024 06:49:36 +0800</pubDate>
      <guid>https://huing.github.io/%E6%B5%8F%E8%A7%88%E5%99%A8/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/</guid>
      <description>K8 引擎</description>
    </item>
    <item>
      <title>协议HTTPS</title>
      <link>https://huing.github.io/%E4%BA%92%E8%81%94%E7%BD%91/%E5%8D%8F%E8%AE%AEhttps/</link>
      <pubDate>Tue, 03 Sep 2024 06:47:02 +0800</pubDate>
      <guid>https://huing.github.io/%E4%BA%92%E8%81%94%E7%BD%91/%E5%8D%8F%E8%AE%AEhttps/</guid>
      <description>HTTP/HTTPS content-type text/plain：纯文本 text/html：HTML 格式 application/json：JSON 数据格式 application/x</description>
    </item>
    <item>
      <title>网络是如何连接的</title>
      <link>https://huing.github.io/%E4%BA%92%E8%81%94%E7%BD%91/%E7%BD%91%E7%BB%9C%E6%98%AF%E5%A6%82%E4%BD%95%E8%BF%9E%E6%8E%A5%E7%9A%84/</link>
      <pubDate>Tue, 03 Sep 2024 06:45:36 +0800</pubDate>
      <guid>https://huing.github.io/%E4%BA%92%E8%81%94%E7%BD%91/%E7%BD%91%E7%BB%9C%E6%98%AF%E5%A6%82%E4%BD%95%E8%BF%9E%E6%8E%A5%E7%9A%84/</guid>
      <description>isp nsp</description>
    </item>
    <item>
      <title>DNS原理</title>
      <link>https://huing.github.io/%E4%BA%92%E8%81%94%E7%BD%91/dns%E5%8E%9F%E7%90%86/</link>
      <pubDate>Tue, 03 Sep 2024 06:44:37 +0800</pubDate>
      <guid>https://huing.github.io/%E4%BA%92%E8%81%94%E7%BD%91/dns%E5%8E%9F%E7%90%86/</guid>
      <description></description>
    </item>
    <item>
      <title>CDN原理</title>
      <link>https://huing.github.io/%E4%BA%92%E8%81%94%E7%BD%91/cdn%E5%8E%9F%E7%90%86/</link>
      <pubDate>Tue, 03 Sep 2024 06:43:54 +0800</pubDate>
      <guid>https://huing.github.io/%E4%BA%92%E8%81%94%E7%BD%91/cdn%E5%8E%9F%E7%90%86/</guid>
      <description></description>
    </item>
    <item>
      <title>npm命令</title>
      <link>https://huing.github.io/post/npm%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Thu, 29 Dec 2022 10:11:31 +0800</pubDate>
      <guid>https://huing.github.io/post/npm%E5%91%BD%E4%BB%A4/</guid>
      <description>login 1 npm login change version 1 npm version 1.0.0-beta.0 publish 1 npm publish --tag beta use 1 npm install — save libraryname@beta.num</description>
    </item>
    <item>
      <title>vite安装vue2和vue3</title>
      <link>https://huing.github.io/post/vite%E5%AE%89%E8%A3%85/</link>
      <pubDate>Wed, 07 Dec 2022 10:50:52 +0800</pubDate>
      <guid>https://huing.github.io/post/vite%E5%AE%89%E8%A3%85/</guid>
      <description>vite 安装 vue2 和 vue3 原文 &amp;lt;https://github.com/vuejs/create-vue 1 npm create vue@3 1 npm create vue@2</description>
    </item>
    <item>
      <title>Sql语法</title>
      <link>https://huing.github.io/post/sql%E8%AF%AD%E6%B3%95/</link>
      <pubDate>Mon, 05 Sep 2022 21:33:26 +0800</pubDate>
      <guid>https://huing.github.io/post/sql%E8%AF%AD%E6%B3%95/</guid>
      <description>精确匹配 id 1 SELECT * FROM menu WHERE id = 569; 模糊匹配 1 SELECT * FROM menu WHERE path LIKE &amp;#39;%teacher%&amp;#39;; 定义变量 1 2 SET @path = &amp;#39;teacher&amp;#39;; SELECT * FROM menu WHERE path LIKE CONCAT(&amp;#39;%&amp;#39;, @path, &amp;#39;%&amp;#39;); 连表查询 1 SELECT a.id,a.NAME,b.num FROM classes a LEFT JOIN classes_detail b ON a.id=b.id WHERE a.id=2541; IS NULL 1 SELECT *</description>
    </item>
    <item>
      <title>语义化标签</title>
      <link>https://huing.github.io/post/%E8%AF%AD%E4%B9%89%E5%8C%96%E6%A0%87%E7%AD%BE/</link>
      <pubDate>Sun, 04 Sep 2022 21:24:41 +0800</pubDate>
      <guid>https://huing.github.io/post/%E8%AF%AD%E4%B9%89%E5%8C%96%E6%A0%87%E7%AD%BE/</guid>
      <description>有利 seo 方便其他设备解析 便于维护提高可读性 section, article, main, p, time, title,header,nav, aside, footer, WebAssembly: WebAssembly 是一种新的编码方式，可以在现代的 Web 浏览器中运行——它是一种低级的类汇编语言，具有</description>
    </item>
    <item>
      <title>创建一个不能修改的对象方法</title>
      <link>https://huing.github.io/post/%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E4%B8%8D%E8%83%BD%E4%BF%AE%E6%94%B9%E7%9A%84%E5%AF%B9%E8%B1%A1%E6%96%B9%E6%B3%95/</link>
      <pubDate>Sun, 04 Sep 2022 12:37:25 +0800</pubDate>
      <guid>https://huing.github.io/post/%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E4%B8%8D%E8%83%BD%E4%BF%AE%E6%94%B9%E7%9A%84%E5%AF%B9%E8%B1%A1%E6%96%B9%E6%B3%95/</guid>
      <description></description>
    </item>
    <item>
      <title>Consumer</title>
      <link>https://huing.github.io/post/consumer/</link>
      <pubDate>Sun, 04 Sep 2022 12:35:59 +0800</pubDate>
      <guid>https://huing.github.io/post/consumer/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 export const themes = { light: { color: &amp;#34;#000000&amp;#34;, background: &amp;#34;#eeeeee&amp;#34;, }, dark: { color:</description>
    </item>
    <item>
      <title>Ref实现父组件调用子组件方法</title>
      <link>https://huing.github.io/post/ref%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</link>
      <pubDate>Sun, 04 Sep 2022 10:30:23 +0800</pubDate>
      <guid>https://huing.github.io/post/ref%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</guid>
      <description>Ref 实现父组件调用子组件方法 ref 的值根据节点的类型而有所不同： 当 ref 属性用于 HTML 元素时，构造函数中使用 React.createRef() 创建的 ref 接收底层 DOM 元素作为其 current 属性。 当 ref 属性</description>
    </item>
    <item>
      <title>图片懒加载</title>
      <link>https://huing.github.io/post/%E5%9B%BE%E7%89%87%E6%87%92%E5%8A%A0%E8%BD%BD/</link>
      <pubDate>Fri, 02 Sep 2022 22:14:54 +0800</pubDate>
      <guid>https://huing.github.io/post/%E5%9B%BE%E7%89%87%E6%87%92%E5%8A%A0%E8%BD%BD/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 /* * 利用window 自带方法 交叉观察者 * * */ const io = new IntersectionObserver(entries =&amp;gt; { // console.log(&amp;#34;entries&amp;#34;, entries); entries.forEach(entry =&amp;gt; { if (entry.isIntersecting) { const image = entry.target; const data_src = image.getAttribute(&amp;#34;data-src&amp;#34;); image.setAttribute(&amp;#34;src&amp;#34;, data_src || &amp;#34;&amp;#34;);</description>
    </item>
    <item>
      <title>Promise实现</title>
      <link>https://huing.github.io/javascript/promise%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Fri, 02 Sep 2022 21:59:01 +0800</pubDate>
      <guid>https://huing.github.io/javascript/promise%E5%AE%9E%E7%8E%B0/</guid>
      <description>promise 实现 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 class Commitment { static PENDING = &amp;#34;待定&amp;#34;; static</description>
    </item>
    <item>
      <title>原型链理解</title>
      <link>https://huing.github.io/post/%E5%8E%9F%E5%9E%8B%E9%93%BE%E7%90%86%E8%A7%A3/</link>
      <pubDate>Fri, 02 Sep 2022 21:59:01 +0800</pubDate>
      <guid>https://huing.github.io/post/%E5%8E%9F%E5%9E%8B%E9%93%BE%E7%90%86%E8%A7%A3/</guid>
      <description>基于原型链的继承 继承属性 // 让我们从一个函数里创建一个对象 o，它自身拥有属性 a 和 b 的： let f = function () { this.a = 1; this.b = 2; }; /_ 这么写也一样 function f() { this.a = 1; this.b =</description>
    </item>
    <item>
      <title>Array</title>
      <link>https://huing.github.io/post/array/</link>
      <pubDate>Thu, 01 Sep 2022 20:21:47 +0800</pubDate>
      <guid>https://huing.github.io/post/array/</guid>
      <description>Array 方法 修改器方法 改变自身的值 push() 将一个或多个元素添加到数组的末尾，并返回该数组的新长度 pop() 从一个数组中删除并返回删除的元素值 reverse() 颠倒数组中的元素，</description>
    </item>
    <item>
      <title>Base</title>
      <link>https://huing.github.io/post/base/</link>
      <pubDate>Thu, 01 Sep 2022 20:20:27 +0800</pubDate>
      <guid>https://huing.github.io/post/base/</guid>
      <description>浅拷贝方法 1 2 3 slice() Object.assign({}, a) ...rest 获取浏览器信息 navigator 1 2 3 4 5 6 navigator.userAgent; // &amp;#34;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.142 Safari/537.36&amp;#34; navigator.language; // &amp;#34;zh-CN&amp;#34; navigator.languages; // [&amp;#34;zh-CN&amp;#34;, &amp;#34;zh&amp;#34;, &amp;#34;fr-CA&amp;#34;, &amp;#34;fr&amp;#34;, &amp;#34;fr-CH&amp;#34;, &amp;#34;fr-FR&amp;#34;, &amp;#34;en&amp;#34;] setTimeOut 实际延时比设定值更久的原因 最小延迟</description>
    </item>
    <item>
      <title>Proxy</title>
      <link>https://huing.github.io/post/proxy/</link>
      <pubDate>Thu, 01 Sep 2022 00:00:37 +0800</pubDate>
      <guid>https://huing.github.io/post/proxy/</guid>
      <description>接口代理 对象代理 https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy 转发代理 1 2 3 4 5 6 let target = {}; let p = new Proxy(target, {}); p.a = 37; // 操作转发到目标 console.log(target.a); // 37. 操作已经被正确地转发</description>
    </item>
    <item>
      <title>H5流程理解</title>
      <link>https://huing.github.io/post/h5%E6%B5%81%E7%A8%8B%E7%90%86%E8%A7%A3/</link>
      <pubDate>Tue, 28 Jun 2022 11:24:10 +0800</pubDate>
      <guid>https://huing.github.io/post/h5%E6%B5%81%E7%A8%8B%E7%90%86%E8%A7%A3/</guid>
      <description>h5 在微信环境下运行的 html pc html 通过 jssdk 到小程序 WebView</description>
    </item>
    <item>
      <title>Clone正则</title>
      <link>https://huing.github.io/post/clone%E6%AD%A3%E5%88%99/</link>
      <pubDate>Mon, 27 Jun 2022 19:35:49 +0800</pubDate>
      <guid>https://huing.github.io/post/clone%E6%AD%A3%E5%88%99/</guid>
      <description>基本语法 \w 匹配一个单字字符 = [A-Za-z0-9_] ? 匹配前面一个表达式 0 次或者 1 次。等价于 {0,1} 如果紧跟在任何量词 *、 +、? 或 {} 的后面，将会使量词变为非贪婪（匹配尽</description>
    </item>
    <item>
      <title>nextjs预渲染理解</title>
      <link>https://huing.github.io/post/nextjs%E9%A2%84%E6%B8%B2%E6%9F%93%E7%90%86%E8%A7%A3/</link>
      <pubDate>Mon, 27 Jun 2022 19:13:36 +0800</pubDate>
      <guid>https://huing.github.io/post/nextjs%E9%A2%84%E6%B8%B2%E6%9F%93%E7%90%86%E8%A7%A3/</guid>
      <description>静态生成 构建时 （build time） 生成 html 在每个页面请求时重用 可以被 cdn 缓存 服务器端渲染 在地址栏输入 url，发送 get 请求，生成 html 页面内容会随着每</description>
    </item>
    <item>
      <title>ts类型</title>
      <link>https://huing.github.io/post/ts%E7%B1%BB%E5%9E%8B/</link>
      <pubDate>Thu, 23 Jun 2022 16:50:50 +0800</pubDate>
      <guid>https://huing.github.io/post/ts%E7%B1%BB%E5%9E%8B/</guid>
      <description>基础类型 布尔值（boolean） 可选类型 true/false 1 let booleanExample: boolean = false; 数字（number） 可选类型 number 1 let numberExample: number = 6; 字符串（string） 可选类型 string 1 2 let stringExample: string =</description>
    </item>
    <item>
      <title>Map类型</title>
      <link>https://huing.github.io/post/map%E7%B1%BB%E5%9E%8B/</link>
      <pubDate>Thu, 16 Jun 2022 23:20:39 +0800</pubDate>
      <guid>https://huing.github.io/post/map%E7%B1%BB%E5%9E%8B/</guid>
      <description>Map 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 // ✅ Initialize Map from Array // 👇️ const map1: Map&amp;lt;string, string&amp;gt; const map1: Map&amp;lt;string, string&amp;gt; = new Map([ [&amp;#34;name&amp;#34;, &amp;#34;Tom&amp;#34;], [&amp;#34;country&amp;#34;, &amp;#34;Chile&amp;#34;], ]); // 👇️ {&amp;#39;name&amp;#39; =&amp;gt; &amp;#39;Tom&amp;#39;, &amp;#39;country&amp;#39; =&amp;gt; &amp;#39;Chile&amp;#39;} console.log(map1); // ✅ Initialize Map from Object const obj = { name: &amp;#34;Tom&amp;#34;, country: &amp;#34;Chile&amp;#34; }; const map2 =</description>
    </item>
    <item>
      <title>useRef vs useState</title>
      <link>https://huing.github.io/post/useref-vs-usestate/</link>
      <pubDate>Wed, 15 Jun 2022 22:53:05 +0800</pubDate>
      <guid>https://huing.github.io/post/useref-vs-usestate/</guid>
      <description>原文地址 https://blog.logrocket.com/usestate-vs-useref/ useHooks 实现 https://usehooks.com/ useRef 1 const inputRef = useRef(); useState 1 const [count, setCount] = useState(0); let variable 1 let prevCount; useState 返回数组，第一个真实的状态(the actual state)，第二个状态更新函数(the state updater function) 状</description>
    </item>
    <item>
      <title>快捷键&amp;终端命令</title>
      <link>https://huing.github.io/post/%E5%BF%AB%E6%8D%B7%E9%94%AE%E7%BB%88%E7%AB%AF%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Wed, 15 Jun 2022 10:50:52 +0800</pubDate>
      <guid>https://huing.github.io/post/%E5%BF%AB%E6%8D%B7%E9%94%AE%E7%BB%88%E7%AB%AF%E5%91%BD%E4%BB%A4/</guid>
      <description>iterm 左右切换 command + 左右键 new tab command + t close tab command + w 分屏左右切换 command + option + 左右键 分屏新建标签页 command + d 关闭 iterm command + q chrome 打开无痕模式 incognito command + shift + n 关闭标签页 command + w</description>
    </item>
    <item>
      <title>Cdn是什么</title>
      <link>https://huing.github.io/post/cdn%E6%98%AF%E4%BB%80%E4%B9%88/</link>
      <pubDate>Mon, 13 Jun 2022 11:54:42 +0800</pubDate>
      <guid>https://huing.github.io/post/cdn%E6%98%AF%E4%BB%80%E4%B9%88/</guid>
      <description>内容分发网络 cdn Content Delivery Network cache-control</description>
    </item>
    <item>
      <title>Bind,apply,call区别</title>
      <link>https://huing.github.io/post/bindapplycall%E5%8C%BA%E5%88%AB/</link>
      <pubDate>Mon, 13 Jun 2022 11:41:34 +0800</pubDate>
      <guid>https://huing.github.io/post/bindapplycall%E5%8C%BA%E5%88%AB/</guid>
      <description>bind, apply, call 区别 1 2 3 4 5 const me = { a: 123 }; const he = { b: 456 }; function x() { console.log(this, arguments, this.a); } bind，返回函数的 copy 使用时要重新调用一次 参数形式， (this, arg1, arg2) 1 2 x.bind(me, 2, 3).bind(he)(); // bind</description>
    </item>
    <item>
      <title>数据类型及判断方法</title>
      <link>https://huing.github.io/post/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%8F%8A%E5%88%A4%E6%96%AD%E6%96%B9%E6%B3%95/</link>
      <pubDate>Mon, 13 Jun 2022 11:38:56 +0800</pubDate>
      <guid>https://huing.github.io/post/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%8F%8A%E5%88%A4%E6%96%AD%E6%96%B9%E6%B3%95/</guid>
      <description>js 8 种数据类型 undefined null string number boolean symbol bigint object array function regexp date 数据类型判断方法 typeof 可以判断值类型，函数 1 2 3 4 5 6 7 8 9 10 11 12 typeof 0; // number typeof &amp;#34;ss&amp;#34;; // string typeof undefined; // undefined typeof true; // boolean typeof 2n; // bigint</description>
    </item>
    <item>
      <title>React工程化</title>
      <link>https://huing.github.io/post/react%E5%B7%A5%E7%A8%8B%E5%8C%96/</link>
      <pubDate>Sun, 12 Jun 2022 17:31:57 +0800</pubDate>
      <guid>https://huing.github.io/post/react%E5%B7%A5%E7%A8%8B%E5%8C%96/</guid>
      <description>useEffect https://overreacted.io/zh-hans/a-complete-guide-to-useeffect/ https://react.iamkasong.com/hooks/useref.html#commit%E9%98%B6%E6%AE%B5 React 工程化 Scheduler（调度器）—— 调度任务的优先级，高优任务优先进入 Reconciler Reconciler（协调器）—— 负责找出变化的组件 Ren</description>
    </item>
    <item>
      <title></title>
      <link>https://huing.github.io/post/host/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://huing.github.io/post/host/</guid>
      <description>标题 devServer.host: &amp;lsquo;0,0,0,0&amp;rsquo; 可以访问所有的主机地址 devServer.host: &amp;rsquo;localhost&#39; 只能访问自己的</description>
    </item>
    <item>
      <title></title>
      <link>https://huing.github.io/post/isvalidelement/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://huing.github.io/post/isvalidelement/</guid>
      <description> 1 2 3 4 5 6 7 8 React.Children.map(children, (child, index) =&amp;gt; { if (!React.isValidElement(child)) return null; return React.cloneElement(child, { ...child.props, onClick: () =&amp;gt; {}, }); }) ``` </description>
    </item>
  </channel>
</rss>
