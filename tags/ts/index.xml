<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ts on huing的博客</title>
    <link>https://blog.promiseme.site/tags/ts/</link>
    <description>Recent content in ts on huing的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 31 Aug 2022 23:49:45 +0800</lastBuildDate><atom:link href="https://blog.promiseme.site/tags/ts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>泛型</title>
      <link>https://blog.promiseme.site/post/ts/%E6%B3%9B%E5%9E%8B/</link>
      <pubDate>Wed, 31 Aug 2022 23:49:45 +0800</pubDate>
      
      <guid>https://blog.promiseme.site/post/ts/%E6%B3%9B%E5%9E%8B/</guid>
      <description>泛型参数的默认类型 1 2 3 4 5 6 7 function createArray&amp;lt;T = string&amp;gt;(length: number, value: T): Array&amp;lt;T&amp;gt; { let result: T[] = []; for (let i = 0; i &amp;lt; length; i++) { result[i] = value; } return result; } 1 2 3 map&amp;lt;U&amp;gt;(callbackfn: (value: T, index: number, array: T[]) =&amp;gt; U, thisArg?: any): U[]; reduce(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array:</description>
    </item>
    
    <item>
      <title>类型断言类型谓词</title>
      <link>https://blog.promiseme.site/post/ts/%E7%B1%BB%E5%9E%8B%E6%96%AD%E8%A8%80%E7%B1%BB%E5%9E%8B%E8%B0%93%E8%AF%8D/</link>
      <pubDate>Thu, 23 Jun 2022 16:50:50 +0800</pubDate>
      
      <guid>https://blog.promiseme.site/post/ts/%E7%B1%BB%E5%9E%8B%E6%96%AD%E8%A8%80%E7%B1%BB%E5%9E%8B%E8%B0%93%E8%AF%8D/</guid>
      <description>is 类型谓词 type predicates as 类型断言 type assertions 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 type Fish = { swim: () =&amp;gt; void }; type Bird = { fly: () =&amp;gt; void }; // | 联合类型 declare function getSmallPet(): Fish | Bird; function isFish(pet: Fish | Bird): pet is Fish {</description>
    </item>
    
    <item>
      <title>const常量断言用法</title>
      <link>https://blog.promiseme.site/post/ts/const%E5%B8%B8%E9%87%8F%E6%96%AD%E8%A8%80%E7%94%A8%E6%B3%95/</link>
      <pubDate>Tue, 14 Jun 2022 10:35:51 +0800</pubDate>
      
      <guid>https://blog.promiseme.site/post/ts/const%E5%B8%B8%E9%87%8F%E6%96%AD%E8%A8%80%E7%94%A8%E6%B3%95/</guid>
      <description>索引访问类型 Indexed Access Types 常量断言 const assertions 数组转 type 1 2 3 4 5 const animals = [&amp;#39;cat&amp;#39;, &amp;#39;dog&amp;#39;, &amp;#39;mouse&amp;#39;] as const // const animals: readonly [&amp;#39;cat&amp;#39;, &amp;#39;dog&amp;#39;, &amp;#39;mouse&amp;#39;] type Animal = typeof animals[number] // type Animal = &amp;#39;cat&amp;#39; | &amp;#39;dog&amp;#39; | &amp;#39;mouse&amp;#39; 数组对象转 type 1 2 3 4 5 const animals = [ { species:</description>
    </item>
    
  </channel>
</rss>
